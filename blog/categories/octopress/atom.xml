<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | Aby George A]]></title>
  <link href="http://www.abygeorgea.com/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://www.abygeorgea.com/"/>
  <updated>2017-08-29T22:22:57+10:00</updated>
  <id>http://www.abygeorgea.com/</id>
  <author>
    <name><![CDATA[Aby George A]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Migrating to Octopress]]></title>
    <link href="http://www.abygeorgea.com/blog/2017/05/20/migrating-to-octopress/"/>
    <updated>2017-05-20T05:57:24+10:00</updated>
    <id>http://www.abygeorgea.com/blog/2017/05/20/migrating-to-octopress</id>
    <content type="html"><![CDATA[<p>Over the past weekend, I noticed that my blog is not available since azure has disabled hosting of my WordPress blog. It happened because I ran out of my free credits for the current month. I started looking for alternate options for hosting WordPress. That&rsquo;s when I came across (<a href="http://www.rahulpnath.com/blog/static-generator-is-all-a-blog-needs-moving-to-octopress/">Static Generator is All a Blog Needs - Moving to Octopress</a>). I decided to give it a try.</p>

<p>Below are the main steps which I followed for migrating to Octopress</p>

<h1>Documentation</h1>

<ul>
<li>Read documentation of Octopress <a href="http://octopress.org/docs/">here</a> and Jekyll <a href="https://jekyllrb.com/docs/home/">here</a></li>
</ul>


<h1>Setup</h1>

<ul>
<li><p>Install Chocolatey as mentioned in documentation <a href="https://chocolatey.org/install">here</a>
Below command can be run on cmd.exe open as administrator
<code>plain cmd.exe
@powershell -NoProfile -ExecutionPolicy Bypass -Command "iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" &amp;&amp; SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"
</code></p></li>
<li><p>As mentioned in octopress documentation, ensure Git, ruby and devkit are installed. Cholocatey way of installation can be found in <a href="https://chocolatey.org/packages/git.install">git</a>, <a href="https://chocolatey.org/packages/ruby">ruby</a> , <a href="https://chocolatey.org/packages/ruby2.devkit">devkit</a>.
Below commands can be run on cmd.exe
<code>plain cmd.exe
choco install git.install
choco install ruby
choco install ruby2.devkit
</code></p></li>
<li><p>By default, devkit is installed in <code>C:\tools\</code>. Move in <code>devkit</code> folder and run below commands
<code>plain cmd.exe
ruby dk.rb init
ruby dk.rb install
gem install bundler
</code></p>

<h1>Install Octopress</h1></li>
<li><p>Now install Octopress as per <a href="http://octopress.org/docs/setup/">documentation</a>
<code>plain cmd.exe
git clone git://github.com/imathis/octopress.git octopress
cd octopress
bundle install
rake install // Install default Octopress theme
</code></p></li>
</ul>


<h1>Install Octostrap3 theme &amp; Customize</h1>

<ul>
<li>Since I didn&rsquo;t like the default theme much, I installed Octostrap3 theme as mentioned <a href="http://kaworu.github.io/octostrap3/setup/install/">here</a>
<code>plain cmd.exe
git clone https://github.com/kAworu/octostrap3.git .themes/octostrap3
rake "install[octostrap3]"
</code></li>
<li>Fix up all issues. The date displayed as &ldquo;Ordinal&rdquo; can be fixed by updating <code>_config.yml</code> file as mentioned in their blog. Below is the config which I used</li>
</ul>


<pre><code class="plain _config.yml">date_format: "%e %b, %Y"
</code></pre>

<ul>
<li>I made few more changes for changing the navigation header color, color of code blocks and also to include a side bar with categories. The changes are as below</li>
</ul>


<p>Changing color of code blocks is done by commenting below line in <code>octopress\sass\custom\_colors.scss</code>
<code>plain
\\$solarized: light;
</code></p>

<p>Navigation header color is changed by adding below to <code>octopress\sass\custom\_styles.scss</code>
<code>
.navbar-default {
    background-image: -webkit-gradient(linear,left top,left bottom,from(#263347),to(#263347));
}
.navbar-default .navbar-brand {
    color: #fff;
}
.navbar-default .navbar-nav&gt;li&gt;a {
    color: #fff;
}
</code></p>

<p>Adding category side bar is done by following steps mentioned in <a href="https://kaworu.github.io/octostrap3/blog/2013/10/03/category-list-aside/">Category List Aside</a></p>

<h1>Google Analytics Integration</h1>

<p>Next step was google analytics integration. Detailed steps for this is available on various blogs. Below is what I followed</p>

<ul>
<li>Sign up for google analytics ID in <a href="https://analytics.google.com/analytics/web/provision?authuser=0#provision/SignUp/">here</a></li>
<li>Update _config.yml with google analytics ID
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>&lt;h1&gt;Google Analytics&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;google_analytics_tracking_id: UA-XXXXXXXX-1</span></code></pre></td></tr></table></div></figure></p></li>
<li>Update <code>google_analytics.html</code> file with below</li>
</ul>


<pre><code>   &lt;script&gt;
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-XXXXXXXX-1', 'auto');
    ga('send', 'pageview');

  &lt;/script&gt;
</code></pre>

<ul>
<li>UA-XXXXXXXX-1 can be replaced with <code>site.google_analytics_tracking_id</code> enclosed in double braces/curly brackets</li>
<li>Log in to Google Analytics site and navigate to Admin >> View >> Filters</li>
<li>Add a new filter to exclude all traffice to hostname &ldquo;localhost&rdquo;. This will help to exclude all site visit done for development/ preview purpose.</li>
</ul>


<h1>Sample Post</h1>

<ul>
<li>Now create a Hello World post and check how it look</li>
</ul>


<pre><code class="plain cmd.exe">rake new_post["Hello World"]
rake generate
rake preview
</code></pre>

<p>rake preview mounts a webserver at <a href="http://localhost:4000" title="http://localhost:4000">http://localhost:4000</a>. By opening a browser window and navigating to <a href="http://localhost:4000" title="http://localhost:4000">http://localhost:4000</a> will preview the Hello World Post</p>

<h1>Deploying to GitHub Pages</h1>

<p>Detailed instructions can be found in <a href="http://octopress.org/docs/deploying/github/">Deploying to Github Pages</a>. Below are high-level steps copied from there
- Create a GitHub repository with name <code>yourusername.github.io</code>
- Run below command. It will prompt for GitHub URL, which needs to be filled in
<code>
rake setup_github_pages // This does all configurations
rake generate
rake deploy
</code>
- Now we can commit the source
<code>
git add .
git commit -m 'your message'
git push origin source
</code></p>

<h1>Custom Domain</h1>

<ul>
<li>Create a file named <code>CNAME</code> in blog source</li>
<li>Update it with custom domain name. It has to be a sub domain (www.examplesubdomain.com)</li>
<li>Update the CNAME dns setting in your domain provider to point to <code>https://username.github.io</code></li>
<li>If top-level domains (exampletopdomain.com) are needed, then configure A record to point to IP address <code>192.30.252.153</code> or <code>192.30.252.154</code>.</li>
</ul>


<h1>Migrating Old blog Post from word press</h1>

<p>After completing above steps,  a new octopress blog is ready to go . Below are the steps which I followed to migrate old blog posts from word press.</p>

<ul>
<li>Clone <a href="https://github.com/thomasf/exitwp">Exitwp</a></li>
<li><p>Follow the steps mentioned in readme.md.</p>

<ul>
<li>Export old wordpress blog using WordPress exporter in tools/export in WordPress admin</li>
<li>Copy xml file to wordpress-xml directory</li>
<li>Run  python exitwp.py in the console from the same directory of unzipped archive</li>
<li>All blogs will be created as separate directory under <code>build</code> directory</li>
<li>Copy relevant folders to source folder of the blog</li>
</ul>
</li>
<li><p>Find broken redirection links and fix</p>

<ul>
<li>The redirection links are now changed to something like <code>{site.root}blog/2017/04/07/mountebank-creating-a-response-based-on-a-file-template-and-modifying-it-based-on-request-part-1/</code></li>
</ul>
</li>
<li>Find broken image links and fix

<ul>
<li>Inorder to make it easier for migrating to another platform later, I created a new config value in <code>_config.yml</code> as below .
<code>
  images_dir: /images
</code></li>
<li>The image links are not pointing to <code>{site.images_dir}/2017/04/27/Mountebank_XML_Response_Folder-Tree.jpg</code></li>
</ul>
</li>
</ul>


<h1>SEO Optimisation in Octopress</h1>

<ul>
<li>In rake file, add below two lines   <code>post.puts "keywords: "</code> and <code>post.puts "description: "</code></li>
<li>Final content will look like below
<code>
 post.puts "---"
 post.puts "layout: post"
 post.puts "title: \"#{title.gsub(/&amp;/,'&amp;amp;')}\""
 post.puts "date: #{Time.now.strftime('%Y-%m-%d %H:%M:%S %z')}"
 post.puts "comments: true"
 post.puts "categories: "
 post.puts "keywords: "
 post.puts "description: "
 post.puts "---"
</code></li>
<li>Add relevant Keyword and description to all pages</li>
</ul>

]]></content>
  </entry>
  
</feed>
