<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Specflow, | Aby George A]]></title>
  <link href="http://www.abygeorgea.com/blog/categories/specflow/atom.xml" rel="self"/>
  <link href="http://www.abygeorgea.com/"/>
  <updated>2018-03-04T21:37:51+11:00</updated>
  <id>http://www.abygeorgea.com/</id>
  <author>
    <name><![CDATA[Aby George A]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Creating HTML Report for Test Execution]]></title>
    <link href="http://www.abygeorgea.com/blog/2017/03/05/creating-html-report-for-test-execution/"/>
    <updated>2017-03-05T20:58:13+11:00</updated>
    <id>http://www.abygeorgea.com/blog/2017/03/05/creating-html-report-for-test-execution</id>
    <content type="html"><![CDATA[<h3>How to create HTML report with details of test execution</h3>

<p>Very often , we will be required to create a report with details of test execution , so that it can be presented to various stakeholders. Specflow provides a feature to create HTML reports. Let us look into more details about how is this done</p>

<ul>
<li>Read through and understand details of reporting from <a href="https://github.com/techtalk/SpecFlow/wiki/Reporting">specflow</a>.</li>
<li>Ensure packages for Specflow, Nunit, Nunit console runner are already installed.</li>
<li>If you are using Nunit 3, install NUnit.Extension.NUnitV2ResultWriter package via nuget package manager. If this is not installed, we will get an error &ldquo;Unknown result format: nunit2&rdquo;.</li>
<li>Follow setups required for running specflow test cases from command line. Details can be found <a href="/blog/2017/03/04/running-specflow-test-from-command-line-using-nunit">here</a>.</li>
<li>Modify the bat file to create nunit2 reports.
<code>
PathToNunitConsolerunner\nunit3-console.exe --labels=All --out=TestResult.txt "--result=TestResult.xml;format=nunit2" PathTo\AcceptanceTests.dll
</code></li>
<li>Add below command into Bat file. This will create HTML Report called &ldquo;MyResult.html&rdquo;
<code>
PathToSpecfloPackage\specflow.exe nunitexecutionreport PathTo\AcceptanceTests.csproj /out:MyResult.html
</code></li>
<li>Final bat file will look like below.</li>
</ul>


<pre><code>REM bat file to run test cases from console and create xml result file
.\..\..\..\packages\NUnit.ConsoleRunner.3.8.0\tools\nunit3-console.exe  --labels=All --out=TestResult.txt "--result=TestResult.xml;format=nunit2" .\AcceptanceTest.dll

REM Generate html report from test output
.\..\..\..\packages\SpecFlow.2.1.0\tools\specflow.exe nunitexecutionreport .\..\..\AcceptanceTest.csproj /out:MyResult.html
</code></pre>

<p>EDITED: If it throws below error in newer version of Visual Studio  then ensure MS Build tool 2013 is installed. It can be downloaded from <a href="https://www.microsoft.com/en-US/download/details.aspx?id=40760">https://www.microsoft.com/en-US/download/details.aspx?id=40760</a></p>

<p>Error : &ldquo;The tools version "12.0&rdquo; is unrecognized. Available tools versions are &ldquo;2.0&rdquo;, &ldquo;3.5&rdquo;, &ldquo;4.0&rdquo;. &ldquo;,</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running Specflow Test From Command Line Using Nunit]]></title>
    <link href="http://www.abygeorgea.com/blog/2017/03/04/running-specflow-test-from-command-line-using-nunit/"/>
    <updated>2017-03-04T20:39:59+11:00</updated>
    <id>http://www.abygeorgea.com/blog/2017/03/04/running-specflow-test-from-command-line-using-nunit</id>
    <content type="html"><![CDATA[<h3>How to run specflow test cases from command line</h3>

<p>We can use nunit console runner for running specflow test cases from command line. Running specflow test cases through nunit console runner will help to create test results in xml file, which can then be used for creating html reports.</p>

<p>Procedure for command line test execution are</p>

<ol>
<li>Define Nunit as the test runner.  This is done in config file</li>
</ol>


<pre><code class="xml ">    &lt;specFlow&gt;
          &lt;unitTestProvider name="NUnit"/&gt;
    &lt;/specFlow&gt;
</code></pre>

<ol>
<li>Include Nunit.Console.Runner package to solution via nuget package manager</li>
<li>Run specflow test cases using below command. We can create a bat file with below command and execute them as required.</li>
</ol>


<pre><code>
pathToNunitConsoleRunner\nunit3-console.exe  PathToProject.dll

 example will be
 .\..\..\..\packages\NUnit.ConsoleRunner.3.8.0\tools\nunit3-console.exe   .\BDDFramework.dll
</code></pre>
]]></content>
  </entry>
  
</feed>
